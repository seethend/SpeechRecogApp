{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/google-api/google-api.component.ts","webpack:///src/app/google-api/google-api.component.html","webpack:///src/app/speech-recognition.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","ngZone","title","voiceActiveSectionDisabled","voiceActiveSectionError","voiceActiveSectionSuccess","voiceActiveSectionListening","voiceText","words","index","highlight","text","split","forEach","w","push","name","recognized","annyang","addCallback","err","error","abort","run","undefined","res","console","log","userSaid","checkToHighLight","commands","alert","addCommands","initializeVoiceRecognitionCallback","start","autoRestart","i","length","j","item","trim","toLowerCase","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GoogleApiComponent","speechRecognitionService","changeDetector","wordIndex","complete","completeWordIndex","showSearchButton","speechData","replace","recognised","DestroySpeechObject","record","subscribe","value","compareAndHighlight","activateSpeechSearchMovie","localWords","compareTheSentenceAtTheEnd","includes","compareTheSentence","compareLastWord","word","detectChanges","skipWord","SpeechRecognitionService","zone","create","observer","window","webkitSpeechRecognition","speechRecognition","continuous","interimResults","lang","maxAlternatives","onresult","speech","term","results","result","resultIndex","transcript","confidence","next","onerror","onend","stop","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GoogleApiComponent } from './google-api/google-api.component';\n\n\nconst routes: Routes = [\n\n  {path: '', pathMatch: 'full', redirectTo: 'g'},\n  {path: 'g', component: GoogleApiComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, NgZone, OnInit } from '@angular/core';\n\ndeclare const annyang: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'SpeachRegonizationApp';\n\n  voiceActiveSectionDisabled: boolean = true;\n  voiceActiveSectionError: boolean = false;\n  voiceActiveSectionSuccess: boolean = false;\n  voiceActiveSectionListening: boolean = false;\n  voiceText: string[] = [];\n\n  words: {name: string, recognized: boolean}[] = []\n  index = 0;\n  highlight  = ''\n\n  constructor(private ngZone: NgZone) {}\n\n  ngOnInit() {\n    let text = `\n    He wondered if it could be called a beach if there was no sand.\n    Car safety systems have come a long way, but he was out to prove they could be outsmarted.\n    She wasn't sure whether to be impressed or concerned that he folded underwear in neat little packages.\n    Even though he thought the world was flat he didn’t see the irony of wanting to travel around the world.\n    8% of 25 is the same as 25% of 8 and one of them is much easier to do in your head.\n    I'm a great listener, really good with empathy vs sympathy and all that, but I hate people.\n    I'd rather be a bird than a fish.\n    The view from the lighthouse excited even the most seasoned traveler.\n    The pigs were insulted that they were named hamburgers.\n    They did nothing as the raccoon attacked the lady’s bag of food.\n    `\n\n    text.split(\" \").forEach(\n      w => this.words.push({name: w, recognized: false})\n    )\n\n  }\n\n  initializeVoiceRecognitionCallback(): void {\n\t\tannyang.addCallback('error', (err) => {\n      if(err.error === 'network'){\n        this.voiceText = [\"Internet is require\"];\n        annyang.abort();\n        this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\n      } else if (this.voiceText === undefined) {\n\t\t\t\tthis.ngZone.run(() => this.voiceActiveSectionError = true);\n\t\t\t\tannyang.abort();\n\t\t\t}\n\t\t});\n\n\t\tannyang.addCallback('soundstart', (res) => {\n      console.log(\"soundstart --> \", res);\n      this.ngZone.run(() => this.voiceActiveSectionListening = true);\n\t\t});\n\n\t\tannyang.addCallback('end', () => {\n      console.log(\"end --> \", this.voiceText);\n      if (this.voiceText === undefined) {\n        this.ngZone.run(() => this.voiceActiveSectionError = true);\n\t\t\t\tannyang.abort();\n\t\t\t}\n\t\t});\n\n\t\tannyang.addCallback('result', (userSaid) => {\n      console.log(\"result --> \", userSaid);\n\t\t\tthis.ngZone.run(() => this.voiceActiveSectionError = false);\n\n\t\t\t// let queryText: any = userSaid[0];\n\n\t\t\t// annyang.abort();\n\n      this.voiceText = userSaid;\n\n      this.checkToHighLight()\n\n\t\t\tthis.ngZone.run(() => this.voiceActiveSectionListening = false);\n      this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\n\t\t});\n\t}\n\n\tstartVoiceRecognition(): void {\n    this.voiceActiveSectionDisabled = false;\n\t\tthis.voiceActiveSectionError = false;\n\t\tthis.voiceActiveSectionSuccess = false;\n    this.voiceText = undefined;\n\n\t\tif (annyang) {\n\t\t\tlet commands = {\n\t\t\t\t'hello': () => {\n          alert(\"Hello User!!!\")\n         }\n\t\t\t};\n\n\t\t\tannyang.addCommands(commands);\n\n      this.initializeVoiceRecognitionCallback();\n\n\t\t\tannyang.start({ autoRestart: false });\n\t\t}\n\t}\n\n\tcloseVoiceRecognition(): void {\n    this.voiceActiveSectionDisabled = true;\n\t\tthis.voiceActiveSectionError = false;\n\t\tthis.voiceActiveSectionSuccess = false;\n\t\tthis.voiceActiveSectionListening = false;\n\t\tthis.voiceText = undefined;\n\n\t\tif(annyang){\n      annyang.abort();\n    }\n  }\n  \n  checkToHighLight() {\n    console.log(\"checked\")\n\n    if(this.voiceText == null)\n      this.voiceText = []\n\n    console.log(this.voiceText)\n\n    for(var i = 0; i < this.voiceText.length; i++) {\n     \n      for(var j = this.index; j < this.words.length; j++) {\n        let item = this.words[j]\n        if(item.name.trim().toLowerCase() === this.voiceText[i].trim().toLowerCase() && !item.recognized) {\n          this.index++;\n          this.highlight = item.name;\n          item.recognized = true;\n          break;\n        }\n      }\n\n    }\n\n    console.log(this.words)\n\n    return false;\n  }\n\n}\n","<div *ngIf=\"voiceActiveSectionDisabled; else voicesection;\">\n    <button type=\"button\" (click)=\"startVoiceRecognition()\">Record</button>\n</div>\n\n<br><br>\n<div>\n    <span *ngFor=\"let item of words\">\n      <span [class.highlight] = \"item.recognized\">{{item.name}}&nbsp;&nbsp;</span>\n    </span>\n</div>\n\n<ng-template #voicesection>\n    <ng-container *ngIf=\"!voiceActiveSectionError\">\n        <!-- ; else failure -->\n        <ng-container *ngIf=\"voiceText\">\n            <!-- ; else start -->\n            <span>{{voiceText}}</span>\n        </ng-container>\n        <!-- <ng-template #start>\n            <ng-container *ngIf=\"voiceActiveSectionListening; else beginning\">\n                <span>Listening...</span>\n            </ng-container>\n            <ng-template #beginning>\n                <span>Start talking...</span>\n            </ng-template>\n        </ng-template> -->\n    </ng-container>\n    <!-- <ng-template #failure>\n        <span>Didn't catch that</span>\n    </ng-template> -->\n    <div>\n        <button (click)=\"closeVoiceRecognition()\">Close</button>\n        <button (click)=\"startVoiceRecognition()\">Restart</button>\n    </div>\n</ng-template>\n\n<br>\n<br>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GoogleApiComponent } from './google-api/google-api.component';\nimport { SpeechRecognitionService } from './speech-recognition.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GoogleApiComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n  ],\n  providers: [SpeechRecognitionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { SpeechRecognitionService } from '../speech-recognition.service';\nimport { Word } from './words.model';\n\n@Component({\n  selector: 'app-google-api',\n  templateUrl: './google-api.component.html',\n  styleUrls: ['./google-api.component.scss']\n})\nexport class GoogleApiComponent implements OnInit {\n\n  showSearchButton: boolean;\n  speechData: string;\n\n  text = `\n  Car safety systems have come a long way, but he was out to prove they could be outsmarted.\n  She wasn't sure whether to be impressed or concerned that he folded shirt in neat little packages.\n  Even though he thought the world was flat he didn’t see the irony of wanting to travel around the world.\n  8% of 25 is the same as 25% of 8 and one of them is much easier to do in your head.\n  I'm a great listener, really good with empathy vs sympathy and all that, but I hate people.\n  I'd rather be a bird than a fish.\n  The view from the lighthouse excited even the most seasoned traveler.\n  The pigs were insulted that they were named hamburgers.\n  They did nothing as the raccoon attacked the lady’s bag of food.\n  `\n\n  words: Word[] = [];\n\n  wordIndex = 0\n  complete = true\n\n  completeWordIndex = 0\n\n  constructor(private speechRecognitionService: SpeechRecognitionService, private changeDetector: ChangeDetectorRef) {\n      this.showSearchButton = true;\n      this.speechData = \"\";\n  }\n\n  ngOnInit() {\n\n      this.text.trim().split(' ').forEach(\n          w => {\n            w = w.replace(',', ' ').replace('.', ' ')\n            this.words.push({name: w, recognised: false})\n          }\n      )\n\n      console.log(\"words ---> \", this.words.length)\n\n  }\n\n  ngOnDestroy() {\n      this.speechRecognitionService.DestroySpeechObject();\n  }\n\n  activateSpeechSearchMovie(): void {\n    this.showSearchButton = false;\n\n    this.speechRecognitionService.record()\n        .subscribe(\n        //listener\n        (value) => {\n            this.speechData = value;\n            // console.log(value);\n            this.compareAndHighlight(value)\n        },\n        //errror\n        (err) => {\n            console.log(err);\n            if (err.error == \"no-speech\") {\n                console.log(\"--restatring service--\");\n                this.activateSpeechSearchMovie();\n            }\n        },\n        //completion\n        () => {\n            this.showSearchButton = true;\n            console.log(\"--complete--\");\n            this.activateSpeechSearchMovie();\n            this.complete = true\n            let localWords = this.speechData.split(' ')\n            this.compareTheSentenceAtTheEnd(localWords)\n        });\n  }\n\n  compareAndHighlight(value: string) {\n    value = value.trim()\n    console.log('trimmed value --> ', value)\n    if(value.includes(' ')) {\n\n        let localWords = value.split(' ')\n        \n        console.log('localwords ---> ', localWords)\n\n        if(this.complete) {\n            this.compareTheSentence(localWords)\n            this.complete = false;\n        } else {\n            value = localWords[localWords.length - 1].trim()\n            this.compareLastWord(value)\n        }\n    } else {\n        this.compareLastWord(value)\n    }\n\n  }\n\n  compareTheSentence(localWords: string[]) {\n    \n    for(let i = 0; i < localWords.length; i++) {\n        let word = this.words[this.wordIndex]\n\n        if(word.name.trim().length == 0) {\n            word.recognised = true\n            this.wordIndex++;\n        }\n        \n        console.log('lastValue compare==> ', localWords[i], this.words[this.wordIndex].name, localWords[i].trim().toLowerCase() === this.words[this.wordIndex].name)\n\n        if(word.name.trim().toLowerCase() === localWords[i].trim().toLowerCase()) {\n            word.recognised = true;\n            this.wordIndex++;\n        } else {\n            break\n        }\n        console.log('indexx ==> ', this.wordIndex);\n\n        this.changeDetector.detectChanges()\n    }\n\n  }\n\n  compareLastWord(value: string) {\n    console.log('lastValue compare==> ', value, this.words[this.wordIndex].name, value.toLowerCase() === this.words[this.wordIndex].name)\n\n    if(value.toLowerCase() === this.words[this.wordIndex].name.trim().toLowerCase()) {\n        this.words[this.wordIndex].recognised = true\n        this.wordIndex++\n    }\n    \n    console.log('indexx ==> ', this.wordIndex);\n  }\n\n  skipWord() {\n    console.log(this.words[this.wordIndex])\n    this.words[this.wordIndex].recognised = true\n    this.wordIndex++\n  }\n\n  compareTheSentenceAtTheEnd(localWords: string[]) {\n    \n    for(let i = 0; i < localWords.length; i++) {\n        let word = this.words[this.completeWordIndex]\n\n        if(word.name.trim().length == 0) {\n            word.recognised = true\n            this.completeWordIndex++;\n        }\n        \n        console.log('lastValue complete compare==> ', localWords[i], this.words[this.completeWordIndex].name, localWords[i].trim().toLowerCase() === this.words[this.wordIndex].name)\n\n        if(word.name.trim().toLowerCase() === localWords[i].trim().toLowerCase()) {\n            word.recognised = true;\n            this.completeWordIndex++;\n        } else {\n            break\n        }\n        console.log('completeWordIndex ==> ', this.completeWordIndex);\n\n        this.changeDetector.detectChanges()\n    }\n\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12\">\n            <div class=\"card\">\n                <div class=\"header\">\n                    <h4 class=\"title\">&nbsp;&nbsp; Web Speech API in Angular2</h4>\n                </div>\n                <div class=\"content\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <span *ngFor=\"let item of words\" class=\"normal\" [class.highlight]=\"item.recognised\">{{item.name}}&nbsp;</span>\n                        </div>\n                        <br>\n                        <br>\n                        <button (click)=\"skipWord()\">skip word</button>\n                        <br>\n                        <br>\n                        <div class=\"col-md-8\">\n                            <div class=\"form-group\">\n                                <label></label>\n                                <p>{{speechData}}</p>\n                            </div>\n                        </div>\n                        <div class=\"col-md-2\"></div>\n                    </div>\n                    <br />\n                    <div class=\"text-center\">\n                        <button class=\"btn btn-info btn-fill btn-wd\" name=\"btnActivateSpeechSearchMovie\" id=\"btnActivateSpeechSearchMovie\" (click)=\"activateSpeechSearchMovie()\" [disabled]=\"!showSearchButton\">\n                            Enable Speech Search\n                        </button>\n                    </div>\n                    <br />\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable, NgZone } from '@angular/core';\r\nimport * as _ from \"lodash\";\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface IWindow extends Window {\r\n    webkitSpeechRecognition: any;\r\n    SpeechRecognition: any;\r\n}\r\n\r\n@Injectable()\r\nexport class SpeechRecognitionService {\r\n    speechRecognition: any;\r\n\r\n    constructor(private zone: NgZone) {\r\n    }\r\n\r\n    record(): Observable<string> {\r\n\r\n        return Observable.create(observer => {\r\n            const { webkitSpeechRecognition }: IWindow = <IWindow> <unknown> window;\r\n            this.speechRecognition = new webkitSpeechRecognition();\r\n\r\n            // const { webkitSpeechGrammarList }: IWindow = <IWindow> <unknown> window;\r\n\r\n            // var speechRecognitionList = new webkitSpeechGrammarList();\r\n\r\n            // var colors = [ 'aqua' , 'azure' , 'beige', 'bisque', 'black', 'blue', 'brown', 'chocolate', 'coral'];\r\n            // var grammar = '#JSGF V1.0; grammar colors; public <color> = ' + colors.join(' | ') + ' ;'\r\n\r\n            // speechRecognitionList.addFromString(grammar, 1);\r\n\r\n            // this.speechRecognition.grammars = speechRecognitionList;\r\n            this.speechRecognition.continuous = false;\r\n            this.speechRecognition.interimResults = true;\r\n            this.speechRecognition.lang = 'en-us';\r\n            this.speechRecognition.maxAlternatives = 5;\r\n\r\n            this.speechRecognition.onresult = speech => {\r\n                let term: string = \"\";\r\n                if (speech.results) {\r\n                    console.log(speech)\r\n                    var result = speech.results[speech.resultIndex];\r\n                    var transcript = result[0].transcript;\r\n                    // if (result.isFinal) {\r\n                        if (result[0].confidence < 0.3) {\r\n                            // console.log(\"Unrecognized result - Please try again\");\r\n                        }\r\n                        else {\r\n                            term = _.trim(transcript);\r\n                            console.log(\"Did you said? -> \" + term + \" , If not then say something else...\");\r\n                        }\r\n                    // }\r\n                }\r\n                this.zone.run(() => {\r\n                    observer.next(term);\r\n                });\r\n            };\r\n\r\n            this.speechRecognition.onerror = error => {\r\n                observer.error(error);\r\n            };\r\n\r\n            this.speechRecognition.onend = () => {\r\n                observer.complete();\r\n            };\r\n\r\n            this.speechRecognition.start();\r\n            console.log(\"Say something - We are listening !!!\");\r\n        });\r\n    }\r\n\r\n    DestroySpeechObject() {\r\n        if (this.speechRecognition)\r\n            this.speechRecognition.stop();\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}